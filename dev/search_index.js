var documenterSearchIndex = {"docs":
[{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"EditURL = \"problem_types.jl\"","category":"page"},{"location":"examples/problem_types/#Problem-types","page":"Problem types","title":"Problem types","text":"","category":"section"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"import GalerkinToolkit as GT\nimport PartitionedSolvers as PS\nimport GLMakie as Makie\nimport ForwardDiff\nimport StaticArrays\nimport Tensors\nusing LinearAlgebra\nimport FileIO # hide\n\n#TODO no current way of adding this to a recipe\n#https://discourse.julialang.org/t/accessing-axis-in-makie-plot-recipes/66006/1\nMakie.update_theme!(Axis=(;aspect=Makie.DataAspect()))","category":"page"},{"location":"examples/problem_types/#Poisson","page":"Problem types","title":"Poisson","text":"","category":"section"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"Solve the following Poisson equation on the unit square,","category":"page"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"leftlbrace\nbeginaligned\n-Delta u = f   textin  Omega\nu = g  texton partialOmega\nendaligned\nright","category":"page"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"with f=1 and g=0.","category":"page"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"Solve it with a piece-wise bi-linear Lagrange interpolation, and visualize the result.","category":"page"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"domain = (0,1,0,1)\ncells = (10,10)\nmesh = GT.cartesian_mesh(domain,cells)\ndirichlet_tag = \"dirichlet\"\nGT.label_boundary_faces!(mesh;physical_name=dirichlet_tag)\nΩ = GT.interior(mesh)\nΓd = GT.boundary(mesh;physical_names=[dirichlet_tag])\nk = 1\nV = GT.lagrange_space(Ω,k;dirichlet_boundary=Γd)\nuhd = GT.dirichlet_field(Float64,V)\ng = GT.analytical_field(x->0,Ω)\nf = GT.analytical_field(x->1,Ω)\nGT.interpolate_dirichlet!(g,uhd)\ndΩ = GT.measure(Ω,2*k)\n∇ = ForwardDiff.gradient\na(u,v) = GT.∫( x->∇(u,x)⋅∇(v,x), dΩ)\nl(v) = GT.∫( x->v(x)*f(x), dΩ)\np = GT.linear_problem(uhd,a,l)\ns = PS.LinearAlgebra_lu(p)\ns = PS.solve(s)\nuh = GT.solution_field(uhd,s)\nMakie.plot(Ω;color=uh,strokecolor=:black)\nFileIO.save(joinpath(@__DIR__,\"fig_pt_poisson.png\"),Makie.current_figure()) # hide","category":"page"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"(Image: )","category":"page"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"warning: Warning\nTODO Use a more complex 2d geometry. The map of the Netherlands? Or the 3d mesh in Gridap tutorials.","category":"page"},{"location":"examples/problem_types/#p-Laplacian","page":"Problem types","title":"p-Laplacian","text":"","category":"section"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"Solve the following p-Laplacian equation on the unit square,","category":"page"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"leftlbrace\nbeginaligned\n-nabla cdot left( nabla u^q-2  nabla u right) = f textin Omega\nu = g  texton partialOmega\nendaligned\nright","category":"page"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"with f=1 and g=0 and q=3.","category":"page"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"Solve it with a piece-wise bi-linear Lagrange interpolation, and visualize the result.","category":"page"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"domain = (0,1,0,1)\ncells = (10,10)\nmesh = GT.cartesian_mesh(domain,cells)\ndirichlet_tag = \"dirichlet\"\nGT.label_boundary_faces!(mesh;physical_name=dirichlet_tag)\nΩ = GT.interior(mesh)\nΓd = GT.boundary(mesh;physical_names=[dirichlet_tag])\nk = 1\nV = GT.lagrange_space(Ω,k;dirichlet_boundary=Γd)\ng = GT.analytical_field(x->0,Ω)\nf = GT.analytical_field(x->1,Ω)\nconst q = 3\nflux(∇u) = norm(∇u)^(q-2) * ∇u\ndflux(∇du,∇u) = (q-2)*norm(∇u)^(q-4)*(∇u⋅∇du)*∇u+norm(∇u)^(q-2)*∇du\nuh = GT.rand_field(Float64,V)\nGT.interpolate_dirichlet!(g,uh)\ndΩ = GT.measure(Ω,2*k)\n∇ = ForwardDiff.gradient\nres(u) = v -> GT.∫( x-> ∇(v,x)⋅GT.call(flux,∇(u,x)) - f(x)*v(x) , dΩ)\njac(u) = (du,v) -> GT.∫( x-> ∇(v,x)⋅GT.call(dflux,∇(du,x),∇(u,x)) , dΩ)\np = GT.nonlinear_problem(uh,res,jac)\ns = PS.newton_raphson(p,verbose=true)\ns = PS.solve(s)\nuh = GT.solution_field(uh,s)\nMakie.plot(Ω;color=uh,strokecolor=:black)\nFileIO.save(joinpath(@__DIR__,\"fig_pt_plaplacian.png\"),Makie.current_figure()) # hide","category":"page"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"(Image: )","category":"page"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"Now, by showing the intermediate results in the iteration process","category":"page"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"uh = GT.rand_field(Float64,V)\nGT.interpolate_dirichlet!(g,uh)\np = GT.nonlinear_problem(uh,res,jac)\ns = PS.newton_raphson(p)\ncolor = Makie.Observable(uh)\nfig = Makie.plot(Ω;color,strokecolor=:black)\nfn = joinpath(@__DIR__,\"fig_pt_plaplacian.gif\")\nMakie.record(fig,fn,PS.history(s);framerate=2) do s\n    color[] = GT.solution_field(uh,s)\nend\nnothing # hide","category":"page"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"(Image: )","category":"page"},{"location":"examples/problem_types/#Heat-equation","page":"Problem types","title":"Heat equation","text":"","category":"section"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"warning: Warning\nTODO Key missing thingsImplement theta method in PartitionedSolvers (easy)\nfunction GT.ode_problem (challenging)","category":"page"},{"location":"examples/problem_types/#Wave-equation","page":"Problem types","title":"Wave equation","text":"","category":"section"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"As a 2nd order ODE","category":"page"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"warning: Warning\nTODO Key missing thingsImplement Newmark method in PartitionedSolvers (easy)","category":"page"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"Reducing to a 1st order ODE","category":"page"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"warning: Warning\nTODO This should be quite straight forward once the functions above have been implemented","category":"page"},{"location":"examples/problem_types/#Helmholtz-equation","page":"Problem types","title":"Helmholtz equation","text":"","category":"section"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"warning: Warning\nTODO This will illustrate how to use complex numbers. It should be possible to implement the example with the current state of the code. (except for periodic boundary conditions) Help wanted.","category":"page"},{"location":"examples/problem_types/#Linear-elasticity","page":"Problem types","title":"Linear elasticity","text":"","category":"section"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"warning: Warning\nTODOProblem statement\nHide call\nUse Voigt notation instead of using Tensors.jl?","category":"page"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"domain = (0,1,0,0.2)\ncells = (20,5)\nD = length(cells)\nmesh = GT.cartesian_mesh(domain,cells)\nΩ = GT.interior(mesh)\nΓ = GT.boundary(mesh;physical_names=[\"1-face-3\"])\nf = GT.analytical_field(x->StaticArrays.SVector(0,-1),Ω)\nconst E = 1\nconst ν = 0.33\nconst λ = (E*ν)/((1+ν)*(1-2*ν))\nconst μ = E/(2*(1+ν))\nσ(ε) = λ*tr(ε)*one(ε) + 2*μ*ε\norder = 2\nV = GT.lagrange_space(Ω,order;shape=(D,),dirichlet_boundary=Γ)\nuhd = GT.dirichlet_field(Float64,V)\ndΩ = GT.measure(Ω,2*order)\n∇ = ForwardDiff.jacobian\n#TODO this function should be better in Tensors.jl\nfunction symmetrize(m::StaticArrays.SMatrix{2,2})\n    T = eltype(m)\n    Tensors.SymmetricTensor{2,2,T}((m[1,1],0.5*(m[2,1]+m[1,2]),m[2,2]))\nend\n#TODO hide GT.call\nε(u,x) = GT.call(symmetrize,∇(u,x))\na(u,v) = GT.∫(x-> GT.call(Tensors.:⊡,ε(v,x),GT.call(σ,ε(u,x))), dΩ)\nl(v) = GT.∫(x-> v(x)⋅f(x), dΩ)\np = GT.linear_problem(uhd,a,l)\ns = PS.LinearAlgebra_lu(p)\ns = PS.solve(s)\nuh = GT.solution_field(uhd,s)\nMakie.plot(Ω;color=x->norm(uh(x)),warp_by_vector=uh,warp_scale=0.002)\nMakie.plot!(Ω;color=nothing,strokecolor=:black)\nFileIO.save(joinpath(@__DIR__,\"fig_pt_linelast.png\"),Makie.current_figure()) # hide","category":"page"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"(Image: )","category":"page"},{"location":"examples/problem_types/#Stokes-equation","page":"Problem types","title":"Stokes equation","text":"","category":"section"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"warning: Warning\nTODOProblem statement\nAllow g1 and g1 to be defined on the boundary\nBuild a pressure field with zero mean","category":"page"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"domain = (0,1,0,1)\ncells = (20,20)\nD = length(cells)\nmesh = GT.cartesian_mesh(domain,cells)\nΩ = GT.interior(mesh)\nΓ1 = GT.boundary(mesh;physical_names=[\"1-face-2\"])\nΓ2 = GT.boundary(mesh;physical_names=[\"1-face-1\",\"1-face-3\",\"1-face-4\"])\n#TODO\n#g1 = GT.analytical_field(x->SVector(1,0),Γ1)\n#g2 = GT.analytical_field(x->SVector(0,0),Γ2)\n#g = GT.piecewiese_field(g1,g2)\n#Γ = GT.domain(g)\ng1 = GT.analytical_field(x->StaticArrays.SVector(1,0),Ω)\ng2 = GT.analytical_field(x->StaticArrays.SVector(0,0),Ω)\ng = GT.piecewiese_field(g1,g2)\nΓ = GT.piecewiese_domain(Γ1,Γ2)\norder = 2\nV = GT.lagrange_space(Ω,order;space=:Q,shape=(D,),dirichlet_boundary=Γ)\nQ = GT.lagrange_space(Ω,order-1;space=:P,dirichlet_boundary=GT.last_dof())\nVxQ = V × Q\nu_field, p_field = 1,2\nuhph_dirichlet = GT.dirichlet_field(Float64,VxQ)\nGT.interpolate_dirichlet!(g,uhph_dirichlet,u_field)\ndΩ = GT.measure(Ω,2*order)\n∇ = ForwardDiff.jacobian\ndiv(u,x) = tr(∇(u,x))\na((u,p),(v,q)) = GT.∫( x-> ∇(v,x)⋅∇(u,x) - div(v,x)*p(x) + q(x)*div(u,x), dΩ)\nl((v,q)) = 0\np = GT.linear_problem(uhph_dirichlet,a,l)\ns = PS.LinearAlgebra_lu(p)\ns = PS.solve(s)\n#TODO\n#uh = GT.solution_field(uhph_dirichlet,s,u_field)\n#ph = GT.solution_field(uhph_dirichlet,s,p_field;zeromean=true)\nuh,ph = GT.solution_field(uhph_dirichlet,s)\nMakie.plot(Ω,color=ph)\nMakie.arrows!(uh;color=x->norm(uh(x)),lengthscale=0.1)\nFileIO.save(joinpath(@__DIR__,\"fig_pt_stokes.png\"),Makie.current_figure()) # hide","category":"page"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"(Image: )","category":"page"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"","category":"page"},{"location":"examples/problem_types/","page":"Problem types","title":"Problem types","text":"This page was generated using Literate.jl.","category":"page"},{"location":"examples/visualization/","page":"Visualization","title":"Visualization","text":"EditURL = \"visualization.jl\"","category":"page"},{"location":"examples/visualization/#Visualization","page":"Visualization","title":"Visualization","text":"","category":"section"},{"location":"examples/visualization/","page":"Visualization","title":"Visualization","text":"","category":"page"},{"location":"examples/visualization/","page":"Visualization","title":"Visualization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"reference/interpolation/#Interpolation","page":"Interpolation","title":"Interpolation","text":"","category":"section"},{"location":"reference/interpolation/","page":"Interpolation","title":"Interpolation","text":"Modules = [GalerkinToolkit]\nPages = [\"interpolation.jl\"]","category":"page"},{"location":"reference/interpolation/#GalerkinToolkit.lagrangian_fe-Tuple","page":"Interpolation","title":"GalerkinToolkit.lagrangian_fe","text":"\n\n\n\n","category":"method"},{"location":"examples/interpolations/","page":"Interpolation types","title":"Interpolation types","text":"EditURL = \"interpolations.jl\"","category":"page"},{"location":"examples/interpolations/#Interpolation-types","page":"Interpolation types","title":"Interpolation types","text":"","category":"section"},{"location":"examples/interpolations/","page":"Interpolation types","title":"Interpolation types","text":"","category":"page"},{"location":"examples/interpolations/","page":"Interpolation types","title":"Interpolation types","text":"This page was generated using Literate.jl.","category":"page"},{"location":"developers_guide/#Developers-guide","page":"Developers guide","title":"Developers guide","text":"","category":"section"},{"location":"examples/posprocessing/","page":"Post-processing","title":"Post-processing","text":"EditURL = \"posprocessing.jl\"","category":"page"},{"location":"examples/posprocessing/#Post-processing","page":"Post-processing","title":"Post-processing","text":"","category":"section"},{"location":"examples/posprocessing/","page":"Post-processing","title":"Post-processing","text":"","category":"page"},{"location":"examples/posprocessing/","page":"Post-processing","title":"Post-processing","text":"This page was generated using Literate.jl.","category":"page"},{"location":"reference/#API-reference","page":"Introduction","title":"API reference","text":"","category":"section"},{"location":"examples/boundary_conditions/","page":"Boundary conditions","title":"Boundary conditions","text":"EditURL = \"boundary_conditions.jl\"","category":"page"},{"location":"examples/boundary_conditions/#Boundary-conditions","page":"Boundary conditions","title":"Boundary conditions","text":"","category":"section"},{"location":"examples/boundary_conditions/","page":"Boundary conditions","title":"Boundary conditions","text":"","category":"page"},{"location":"examples/boundary_conditions/","page":"Boundary conditions","title":"Boundary conditions","text":"This page was generated using Literate.jl.","category":"page"},{"location":"refindex/#Index","page":"Index","title":"Index","text":"","category":"section"},{"location":"refindex/","page":"Index","title":"Index","text":"","category":"page"},{"location":"examples/solvers/","page":"Solvers","title":"Solvers","text":"EditURL = \"solvers.jl\"","category":"page"},{"location":"examples/solvers/#Solvers","page":"Solvers","title":"Solvers","text":"","category":"section"},{"location":"examples/solvers/","page":"Solvers","title":"Solvers","text":"","category":"page"},{"location":"examples/solvers/","page":"Solvers","title":"Solvers","text":"This page was generated using Literate.jl.","category":"page"},{"location":"reference/integration/#Integration","page":"Integration","title":"Integration","text":"","category":"section"},{"location":"reference/integration/","page":"Integration","title":"Integration","text":"Modules = [GalerkinToolkit]\nPages = [\"integration.jl\"]","category":"page"},{"location":"reference/integration/#GalerkinToolkit.AbstractQuadrature","page":"Integration","title":"GalerkinToolkit.AbstractQuadrature","text":"abstract type AbstractQuadrature\n\nBasic queries\n\ncoordinates\nweights\n\nBasic constructors\n\ndefault_quadrature\nduffy_quadrature\ntensor_product_quadrature\n\nSupertype hierarchy\n\nAbstractQuadrature <: GT.AbstractType\n\n\n\n\n\n","category":"type"},{"location":"reference/integration/#GalerkinToolkit.default_quadrature-Tuple{Any, Any}","page":"Integration","title":"GalerkinToolkit.default_quadrature","text":"\n\n\n\n","category":"method"},{"location":"reference/integration/#GalerkinToolkit.duffy_quadrature-Tuple{Any, Any}","page":"Integration","title":"GalerkinToolkit.duffy_quadrature","text":"\n\n\n\n","category":"method"},{"location":"reference/integration/#GalerkinToolkit.tensor_product_quadrature-Tuple{Any, Any}","page":"Integration","title":"GalerkinToolkit.tensor_product_quadrature","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/","page":"Mesh","title":"Mesh","text":"Modules = [GalerkinToolkit]\nPages = [\"mesh.jl\", \"p_mesh.jl\"]","category":"page"},{"location":"reference/mesh/#GalerkinToolkit.AbstractChain","page":"Mesh","title":"GalerkinToolkit.AbstractChain","text":"abstract type AbstractChain\n\nBasic queries\n\nnode_coordinates\nface_nodes\nface_reference_id\nreference_faces\nperiodic_nodes\nphysical_faces\nphysical_nodes\noutwards_normals\n\nBasic constructors\n\nchain_from_arrays\n\n\n\n\n\n","category":"type"},{"location":"reference/mesh/#GalerkinToolkit.AbstractFaceGeometry","page":"Mesh","title":"GalerkinToolkit.AbstractFaceGeometry","text":"abstract type AbstractFaceGeometry\n\nBasic queries\n\nnum_dims\nis_axis_aligned\nis_simplex\nis_n_cube\nreal_type\nint_type\nis_unit_n_cube\nis_unit_simplex\nis_unitary\nbounding_box\nboundary\nvertex_permutations\n\nBasic constructors\n\nunit_simplex\nunit_n_cube\n\nSupertype hierarchy\n\nAbstractFaceGeometry <: GT.AbstractType\n\n\n\n\n\n","category":"type"},{"location":"reference/mesh/#GalerkinToolkit.AbstractFaceTopology","page":"Mesh","title":"GalerkinToolkit.AbstractFaceTopology","text":"abstract type AbstractFaceTopology\n\nBasic queries\n\nboundary\nvertex_permutations\n\nBasic constructors\n\ntopology\n\n\n\n\n\n","category":"type"},{"location":"reference/mesh/#GalerkinToolkit.AbstractMesh","page":"Mesh","title":"GalerkinToolkit.AbstractMesh","text":"abstract type AbstractMesh\n\nBasic queries\n\nnode_coordinates\nface_nodes\nface_reference_id\nreference_faces\nperiodic_nodes\nphysical_faces\nphysical_nodes\noutwards_normals\n\nBasic constructors\n\nmesh_from_arrays\nmesh_from_gmsh\ncartesian_mesh\nmesh_from_chain\n\n\n\n\n\n","category":"type"},{"location":"reference/mesh/#GalerkinToolkit.AbstractMeshFace","page":"Mesh","title":"GalerkinToolkit.AbstractMeshFace","text":"abstract type AbstractMeshFace\n\nBasic queries\n\ngeometry\nnum_dims\nnum_nodes\nnode_coordinates\nmonomial_exponents\nprimal_basis\ndual_basis\nlib_to_user_nodes\nshape_functions\ntabulator\nboundary\ninterior_nodes\ninterior_node_permutations\n\nBasic constructors\n\nlagrange_mesh_face\n\n\n\n\n\n","category":"type"},{"location":"reference/mesh/#GalerkinToolkit.AbstractMeshTopology","page":"Mesh","title":"GalerkinToolkit.AbstractMeshTopology","text":"abstract type AbstractMeshTopology\n\nBasic queries\n\nface_incidence\nface_reference_id\nface_permutation_ids\nreference_faces\n\nBasic constructors\n\ntopology\n\n\n\n\n\n","category":"type"},{"location":"reference/mesh/#GalerkinToolkit.boundary-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.boundary","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.bounding_box-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.bounding_box","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.cartesian_mesh-Tuple{Any, Any}","page":"Mesh","title":"GalerkinToolkit.cartesian_mesh","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.chain_from_arrays-NTuple{4, Any}","page":"Mesh","title":"GalerkinToolkit.chain_from_arrays","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.classify_mesh_nodes!","page":"Mesh","title":"GalerkinToolkit.classify_mesh_nodes!","text":"\n\n\n\n","category":"function"},{"location":"reference/mesh/#GalerkinToolkit.complexify-Tuple{GalerkinToolkit.AbstractMesh}","page":"Mesh","title":"GalerkinToolkit.complexify","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.coordinates-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.coordinates","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.dual_basis-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.dual_basis","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.face_incidence-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.face_incidence","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.face_nodes-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.face_nodes","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.face_permutation_ids-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.face_permutation_ids","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.face_reference_id-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.face_reference_id","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.geometry-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.geometry","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.int_type-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.int_type","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.interior_node_permutations-Tuple{GalerkinToolkit.AbstractMeshFace}","page":"Mesh","title":"GalerkinToolkit.interior_node_permutations","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.interior_nodes-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.interior_nodes","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.is_axis_aligned-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.is_axis_aligned","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.is_n_cube-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.is_n_cube","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.is_simplex-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.is_simplex","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.is_unit_n_cube-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.is_unit_n_cube","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.is_unit_simplex-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.is_unit_simplex","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.is_unitary-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.is_unitary","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.label_boundary_faces!-Tuple{GalerkinToolkit.PMesh}","page":"Mesh","title":"GalerkinToolkit.label_boundary_faces!","text":"label_boundary_faces!(mesh::PMesh;physical_name=\"boundary\")\n\nUpdate mesh inplace by using partition ownership of faces to label only the boundary of  meshes in a parallel mesh where the boundary is defined as a face owned by a given partition  and not incident with any other faces on another partition (i.e., not on the interface). \n\n\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.lagrange_mesh_face-Tuple{Any, Any}","page":"Mesh","title":"GalerkinToolkit.lagrange_mesh_face","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.lib_to_user_nodes-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.lib_to_user_nodes","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.mesh_from_arrays-NTuple{4, Any}","page":"Mesh","title":"GalerkinToolkit.mesh_from_arrays","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.mesh_from_chain-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.mesh_from_chain","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.mesh_from_gmsh-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.mesh_from_gmsh","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.monomial_exponents-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.monomial_exponents","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.node_coordinates-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.node_coordinates","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.node_permutations-Tuple{GalerkinToolkit.AbstractMeshFace}","page":"Mesh","title":"GalerkinToolkit.node_permutations","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.num_dims-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.num_dims","text":"num_dims(a)\n\nReturn the number of space dimensions of a. Defaults to a.num_dims.\n\n\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.num_nodes-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.num_nodes","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.outwards_normals-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.outwards_normals","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.periodic_nodes-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.periodic_nodes","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.physical_faces-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.physical_faces","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.physical_names-Tuple{Any, Any}","page":"Mesh","title":"GalerkinToolkit.physical_names","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.physical_nodes-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.physical_nodes","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.primal_basis-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.primal_basis","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.real_type-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.real_type","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.reference_faces-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.reference_faces","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.shape_functions-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.shape_functions","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.simplexify-Tuple{GalerkinToolkit.AbstractFaceGeometry}","page":"Mesh","title":"GalerkinToolkit.simplexify","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.tabulator-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.tabulator","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.topology-Tuple{GalerkinToolkit.AbstractMesh}","page":"Mesh","title":"GalerkinToolkit.topology","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.unit_n_cube-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.unit_n_cube","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.unit_simplex-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.unit_simplex","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.vertex_permutations-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.vertex_permutations","text":"\n\n\n\n","category":"method"},{"location":"reference/mesh/#GalerkinToolkit.weights-Tuple{Any}","page":"Mesh","title":"GalerkinToolkit.weights","text":"\n\n\n\n","category":"method"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"EditURL = \"mesh_generation.jl\"","category":"page"},{"location":"examples/mesh_generation/#Mesh-generation","page":"Mesh generation","title":"Mesh generation","text":"","category":"section"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"import GalerkinToolkit as GT\nimport PartitionedArrays as PA\nimport GLMakie as Makie\nimport Gmsh\nimport Metis\nimport FileIO # hide\nusing StaticArrays\n\n#TODO no current way of adding this to a recipe\n#https://discourse.julialang.org/t/accessing-axis-in-makie-plot-recipes/66006/1\nMakie.update_theme!(Axis=(;aspect=Makie.DataAspect()))","category":"page"},{"location":"examples/mesh_generation/#Cartesian-meshes","page":"Mesh generation","title":"Cartesian meshes","text":"","category":"section"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"Generate a Cartesian mesh of the 3D domain (01)times(23)times(-11) using 5 cells per direction and visualize it.","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"domain = (0,1,1,3,-1,1)\ncells = (5,5,5)\nmesh = GT.cartesian_mesh(domain,cells)\nMakie.plot(mesh,color=:pink,strokecolor=:blue)\nFileIO.save(joinpath(@__DIR__,\"fig_mg_cm_3d.png\"),Makie.current_figure()) # hide","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"(Image: )","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"Generate a Cartesian mesh of the 2D domain (01)times(23) and visualize it.","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"domain = (0,1,2,3)\ncells = (5,5)\nmesh = GT.cartesian_mesh(domain,cells)\nMakie.plot(mesh,color=:pink,strokecolor=:blue)\nFileIO.save(joinpath(@__DIR__,\"fig_mg_cm_2d.png\"),Makie.current_figure()) # hide","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"(Image: )","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"Now visualize all objects (vertices, edges, faces) in the mesh.","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"Makie.plot(mesh,color=:pink,strokecolor=:blue,shrink=0.6,dim=(0:2))\nFileIO.save(joinpath(@__DIR__,\"fig_mg_cm_2d_a.png\"),Makie.current_figure()) # hide","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"(Image: )","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"Now, do not generate low-dimensional objects on the interior of the mesh","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"domain = (0,1,2,3)\ncells = (5,5)\nmesh = GT.cartesian_mesh(domain,cells;complexify=false)\nMakie.plot(mesh,color=:pink,strokecolor=:blue,shrink=0.6,dim=(0:2))\nFileIO.save(joinpath(@__DIR__,\"fig_mg_cm_2d_b.png\"),Makie.current_figure()) # hide","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"(Image: )","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"note: Note\nMost algorithms require working with a polytopal complex (i.e., a mesh containing all low dimensional objects). Thus using the option complexify=false is not recommended, unless you know what you are doing.","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"Now, use triangles instead of squares.","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"domain = (0,1,2,3)\ncells = (5,5)\nmesh = GT.cartesian_mesh(domain,cells;simplexify=true)\nMakie.plot(mesh,color=:pink,strokecolor=:blue)\nFileIO.save(joinpath(@__DIR__,\"fig_mg_cm_2d_c.png\"),Makie.current_figure()) # hide","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"(Image: )","category":"page"},{"location":"examples/mesh_generation/#Gmsh-meshes","page":"Mesh generation","title":"Gmsh meshes","text":"","category":"section"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"Read a mesh from a \".msh\" file and visualize it.","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"repodir = joinpath(@__DIR__,\"..\",\"..\",\"..\")\nfn = joinpath(repodir,\"assets\",\"mesh1.msh\")\nmesh = GT.mesh_from_gmsh(fn)\nMakie.plot(mesh,color=:pink,strokecolor=:blue)\nFileIO.save(joinpath(@__DIR__,\"fig_mg_gmsh.png\"),Makie.current_figure()) # hide","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"(Image: )","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"Now, define the mesh using GMSH DSL","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"warning: Warning\nTODO","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"Now, define the mesh using GMSH julia API","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"warning: Warning\nTODO","category":"page"},{"location":"examples/mesh_generation/#Parallel-meshes","page":"Mesh generation","title":"Parallel meshes","text":"","category":"section"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"Generate a Cartesian mesh of the 2D domain (01)times(23) using 10 cells in each direction. Partitioned it into 2 parts per direction and visualize with face color according to part owner.","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"domain = (0,1,2,3)\ncells_per_dir = (10,10)\nparts_per_dir = (2,2)\nparts = LinearIndices((prod(parts_per_dir),))\npmesh = GT.cartesian_mesh(domain,cells_per_dir;parts_per_dir,parts)\nMakie.plot(pmesh;color=GT.FaceData(\"__OWNER__\"),strokecolor=:blue)\nFileIO.save(joinpath(@__DIR__,\"fig_mg_pmesh.png\"),Makie.current_figure()) # hide","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"(Image: )","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"warning: Warning\nTODO Maybe a different API for partsperdir and parts? TODO Maybe a different API for GT.FaceData(\"OWNER\")","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"Generate a mesh on a single machine (using Gmsh in this case), partition it using Metis into 4 parts, and visualize it.","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"np = 4\nparts = LinearIndices((np,))\npmesh = PA.map_main(parts) do parts\n    fn = joinpath(repodir,\"assets\",\"mesh1.msh\")\n    mesh = GT.mesh_from_gmsh(fn)\n    graph = GT.mesh_graph(mesh)\n    graph_partition = Metis.partition(graph,np)\n    GT.partition_mesh(mesh,np;graph,graph_partition)\nend |> GT.scatter_mesh\nMakie.plot(pmesh,color=GT.FaceData(\"__OWNER__\"),strokecolor=:blue)\nFileIO.save(joinpath(@__DIR__,\"fig_mg_pmesh_a.png\"),Makie.current_figure()) # hide","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"(Image: )","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"warning: Warning\nTODO color=GT.FaceData(\"__PART__\") not working\nTODO better syntax for color=GT.FaceData(\"__PART__\") ?","category":"page"},{"location":"examples/mesh_generation/#Meshes-from-arrays","page":"Mesh generation","title":"Meshes from arrays","text":"","category":"section"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"Generate a mesh of three triangles from the arrays describing node coordinates and cell connectivity.","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"order = 1\ntriangle = GT.unit_simplex(Val(2))\ntriangle3 = GT.lagrange_mesh_face(triangle,order)\nnode_to_coords = SVector{2,Float64}[(0,0),(1,0),(0,1),(1,1),(2,0)]\ncell_to_nodes = [[1,2,3],[2,3,4],[2,4,5]]\ncell_to_type = [1,1,1]\ntype_to_refcell = [triangle3]\nchain = GT.chain_from_arrays(\n        node_to_coords,\n        cell_to_nodes,\n        cell_to_type,\n        type_to_refcell)\nmesh = GT.mesh_from_chain(chain)\nMakie.plot(mesh,color=:pink,strokecolor=:blue)\nFileIO.save(joinpath(@__DIR__,\"fig_mg_mfa.png\"),Makie.current_figure()) # hide","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"(Image: )","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"Now, include also a square element","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"square = GT.unit_n_cube(Val(2))\nsquare4 = GT.lagrange_mesh_face(square,order)\ncell_to_nodes = [[1,2,3,4],[2,4,5]]\ncell_to_type = [2,1]\ntype_to_refcell = (triangle3,square4)\nchain = GT.chain_from_arrays(\n        node_to_coords,\n        cell_to_nodes,\n        cell_to_type,\n        type_to_refcell)\nmesh = GT.mesh_from_chain(chain)\nMakie.plot(mesh,color=:pink,strokecolor=:blue)\nFileIO.save(joinpath(@__DIR__,\"fig_mg_mfa_2.png\"),Makie.current_figure()) # hide","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"(Image: )","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"warning: Warning\nTODO visualization not working properly when more than one element type present","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"Generate a mesh that includes cells of different dimensions, i.e., triangles, segments, and vertices.","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"segment = GT.unit_simplex(Val(1))\nsegment2 = GT.lagrange_mesh_face(segment,order)\nvertex = GT.unit_simplex(Val(0))\nvertex1 = GT.lagrange_mesh_face(vertex,order)\nnode_to_coords = SVector{2,Float64}[(0,0),(1,0),(0,1),(1,1),(2,0)]\nface2_to_nodes = [[1,2,3],[2,3,4],[2,4,5]]\nface2_to_type = [1,1,1]\nface1_to_nodes = [[1,2],[2,5],[5,4]]\nface1_to_type = [1,1,1]\nface0_to_nodes = [[1],[3]]\nface0_to_type = [1,1]\nface_to_nodes = [face0_to_nodes,face1_to_nodes,face2_to_nodes]\nface_to_type = [face0_to_type,face1_to_type,face2_to_type]\ntype_to_refcell = ([vertex1],[segment2],[triangle3])\nmesh = GT.mesh_from_arrays(node_to_coords,face_to_nodes,face_to_type,type_to_refcell)\nMakie.plot(mesh,color=:pink,strokecolor=:blue,shrink=0.8,dim=(0:2))\nFileIO.save(joinpath(@__DIR__,\"fig_mg_mfa_3.png\"),Makie.current_figure()) # hide","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"(Image: )","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"Now, generate all low-dimensional objects","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"mesh = GT.complexify(mesh)\nMakie.plot(mesh,color=:pink,strokecolor=:blue,shrink=0.8,dim=(0:2))\nFileIO.save(joinpath(@__DIR__,\"fig_mg_mfa_4.png\"),Makie.current_figure()) # hide","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"(Image: )","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"","category":"page"},{"location":"examples/mesh_generation/","page":"Mesh generation","title":"Mesh generation","text":"This page was generated using Literate.jl.","category":"page"},{"location":"examples/fields/","page":"Field types","title":"Field types","text":"EditURL = \"fields.jl\"","category":"page"},{"location":"examples/fields/#Field-types","page":"Field types","title":"Field types","text":"","category":"section"},{"location":"examples/fields/","page":"Field types","title":"Field types","text":"","category":"page"},{"location":"examples/fields/","page":"Field types","title":"Field types","text":"This page was generated using Literate.jl.","category":"page"},{"location":"examples/#Examples","page":"Introduction","title":"Examples","text":"","category":"section"},{"location":"examples/methods/","page":"Discretization methods","title":"Discretization methods","text":"EditURL = \"methods.jl\"","category":"page"},{"location":"examples/methods/#Discretization-methods","page":"Discretization methods","title":"Discretization methods","text":"","category":"section"},{"location":"examples/methods/","page":"Discretization methods","title":"Discretization methods","text":"import GalerkinToolkit as GT\nimport PartitionedSolvers as PS\nimport GLMakie as Makie\nimport ForwardDiff\nusing LinearAlgebra\nusing Test\nimport FileIO # hide\n\ndomain = (0,1,0,1)\ncells = (10,10)\nmesh = GT.cartesian_mesh(domain,cells)\nGT.label_boundary_faces!(mesh;physical_name=\"Γd\")\nΩ = GT.interior(mesh)\nΓd = GT.boundary(mesh;physical_names=[\"Γd\"])\nn_Γd = GT.unit_normal(Γd,Ω)\nu = GT.analytical_field(x->sum(x),Ω)\n#TODO these two definitions should be enough\n#∇ = ForwardDiff.gradient\n#Δ = (u,x) -> tr(ForwardDiff.jacobian(y->∇(u,y),x))\ngradient(u) = x->ForwardDiff.gradient(u,x)\njacobian(u) = x->ForwardDiff.jacobian(u,x)\nlaplacian(u) = x-> tr(ForwardDiff.jacobian(y->ForwardDiff.gradient(u,y),x))\nΔ(u) = GT.call(laplacian,u)\n∇(u) = GT.call(gradient,u)\nΔ(u,x) = Δ(u)(x)\n∇(u,x) = ∇(u)(x)\ntol = 1e-10\norder = 2\nγ = order*(order+1)/10","category":"page"},{"location":"examples/methods/#Continuous-Galerkin","page":"Discretization methods","title":"Continuous Galerkin","text":"","category":"section"},{"location":"examples/methods/","page":"Discretization methods","title":"Discretization methods","text":"V = GT.lagrange_space(Ω,order;dirichlet_boundary=Γd)\nuhd = GT.dirichlet_field(Float64,V)\nGT.interpolate_dirichlet!(u,uhd)\ndΩ = GT.measure(Ω,2*order)\na_Ω = (u,v) -> GT.∫( x->∇(u,x)⋅∇(v,x), dΩ)\nl_Ω = (v) -> GT.∫( x-> -v(x)*GT.call(Δ,u,x), dΩ)\np = GT.linear_problem(uhd,a_Ω,l_Ω)\ns = PS.solve(p)\nuh = GT.solution_field(uhd,s)\neh = x -> u(x) - uh(x)\nel2 = sqrt(sum(GT.∫( x->abs2(eh(x)), dΩ)))\n@test el2 < tol","category":"page"},{"location":"examples/methods/#Static-condensation","page":"Discretization methods","title":"Static condensation","text":"","category":"section"},{"location":"examples/methods/","page":"Discretization methods","title":"Discretization methods","text":"warning: Warning\nTODO","category":"page"},{"location":"examples/methods/#Nitche-Method","page":"Discretization methods","title":"Nitche Method","text":"","category":"section"},{"location":"examples/methods/","page":"Discretization methods","title":"Discretization methods","text":"V = GT.lagrange_space(Ω,order)\nn_Γd = GT.unit_normal(Γd,Ω)\nh_Γd = GT.face_diameter_field(Γd)\ndΓd = GT.measure(Γd,2*order)\na_Γd = (u,v) -> GT.∫(\n    x-> (γ/h_Γd(x))*v(x)*u(x)-\n    v(x)*n_Γd(x)⋅∇(u,x)-\n    n_Γd(x)⋅∇(v,x)*u(x), dΓd)\nl_Γd = v -> GT.∫(\n    x-> (γ/h_Γd(x))*v(x)*u(x)-\n    n_Γd(x)⋅∇(v,x)*u(x), dΓd)\na_ni = (u,v) -> a_Ω(u,v) + a_Γd(u,v)\nl_ni = v -> l_Ω(v) + l_Γd(v)\np = GT.linear_problem(Float64,V,a_ni,l_ni)\ns = PS.solve(p)\nuh = GT.solution_field(V,s)\neh = x -> u(x) - uh(x)\nel2 = sqrt(sum(GT.∫( x->abs2(eh(x)), dΩ)))\n@test el2 < tol","category":"page"},{"location":"examples/methods/#Lagrange-multipliers","page":"Discretization methods","title":"Lagrange multipliers","text":"","category":"section"},{"location":"examples/methods/","page":"Discretization methods","title":"Discretization methods","text":"Q = GT.lagrange_space(Γd,order-1;conformity=:L2)\nVxQ = V × Q\nA = ((u,p),(v,q)) -> a_Ω(u,v) + GT.∫(\n    x->(u(x)+p(x))*(v(x)+q(x))-\n    u(x)*v(x)-p(x)*q(x), dΓd)\nL = ((v,q),) -> l_Ω(v) + GT.∫(x->u(x)*q(x), dΓd)\np = GT.linear_problem(Float64,VxQ,A,L)\ns = PS.solve(p)\nuh, = GT.solution_field(VxQ,s)\neh = x -> u(x) - uh(x)\nel2 = sqrt(sum(GT.∫( x->abs2(eh(x)), dΩ)))\n@test el2 < tol","category":"page"},{"location":"examples/methods/#Interior-Penalty","page":"Discretization methods","title":"Interior Penalty","text":"","category":"section"},{"location":"examples/methods/","page":"Discretization methods","title":"Discretization methods","text":"mean(u,x) = 0.5*(u(x)[+]+u(x)[-])\njump(u,n,x) = u(x)[+]*n[+](x) + u(x)[-]*n[-](x)\nGT.label_interior_faces!(mesh;physical_name=\"Λ\")\nΛ = GT.skeleton(mesh;physical_names=[\"Λ\"])\ndΛ = GT.measure(Λ,2*order)\nn_Λ = GT.unit_normal(Λ,Ω)\nh_Λ = GT.face_diameter_field(Λ)\nV = GT.lagrange_space(Ω,order;conformity=:L2)\na_Λ = (u,v) -> GT.∫(\n    x-> (γ/h_Λ(x))*jump(v,n_Λ,x)⋅jump(u,n_Λ,x)-\n    jump(v,n_Λ,x)⋅mean(∇(u),x)-\n    mean(∇(v),x)⋅jump(u,n_Λ,x), dΛ)\na_ip = (u,v) -> a_Ω(u,v) + a_Γd(u,v) + a_Λ(u,v)\nl_ip = l_ni\np = GT.linear_problem(Float64,V,a_ip,l_ip)\ns = PS.solve(p)\nuh = GT.solution_field(V,s)\neh = x -> u(x) - uh(x)\nel2 = sqrt(sum(GT.∫( x->abs2(eh(x)), dΩ)))\n@test el2 < tol","category":"page"},{"location":"examples/methods/","page":"Discretization methods","title":"Discretization methods","text":"We can also combine the interior penalty the impose inter-element continuity with the auxiliary Lagrange multiplier field to impose Dirichlet boundary conditions.","category":"page"},{"location":"examples/methods/","page":"Discretization methods","title":"Discretization methods","text":"VxQ = V × Q\nA_ip = ((u,p),(v,q)) -> A((u,p),(v,q)) + a_Λ(u,v)\nL_ip = L\np = GT.linear_problem(Float64,VxQ,A_ip,L_ip)\ns = PS.solve(p)\nuh, = GT.solution_field(VxQ,s)\neh = x -> u(x) - uh(x)\n@test el2 < tol","category":"page"},{"location":"examples/methods/#Hybrid-method","page":"Discretization methods","title":"Hybrid method","text":"","category":"section"},{"location":"examples/methods/","page":"Discretization methods","title":"Discretization methods","text":"warning: Warning\nTODO. Raviart-Thomas interpolation needed for this case","category":"page"},{"location":"examples/methods/#HDG","page":"Discretization methods","title":"HDG","text":"","category":"section"},{"location":"examples/methods/","page":"Discretization methods","title":"Discretization methods","text":"warning: Warning\nTODO. This one is challenging","category":"page"},{"location":"examples/methods/","page":"Discretization methods","title":"Discretization methods","text":"","category":"page"},{"location":"examples/methods/","page":"Discretization methods","title":"Discretization methods","text":"This page was generated using Literate.jl.","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = GalerkinToolkit","category":"page"},{"location":"#GalerkinToolkit","page":"Home","title":"GalerkinToolkit","text":"","category":"section"},{"location":"#What","page":"Home","title":"What","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package aims at providing a fully-fledged finite-element toolbox in pure Julia, with support for different computing systems from laptops to supercomputers and GPUs.  ","category":"page"},{"location":"","page":"Home","title":"Home","text":"NB. This package is work in progress; a proof-of-concept API is already available (for CPUs). The package is not production ready at this point. Planned performance and documentation improvements are needed.","category":"page"},{"location":"","page":"Home","title":"Home","text":"warn: Warn\nTODO elaborary more","category":"page"},{"location":"#Why","page":"Home","title":"Why","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package follows a new approach to implement finite-element methods based on the lessons learned in the Gridap project.","category":"page"},{"location":"","page":"Home","title":"Home","text":"warn: Warn\nTODO elaborary more","category":"page"},{"location":"#How-to-get-started","page":"Home","title":"How to get started","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"For users:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Read the Examples section to learn how the different pieces of the library work together in different scenarios.\nDo you want more info about a specific function, macro, or data type? Read the docstrings in the API reference.","category":"page"},{"location":"","page":"Home","title":"Home","text":"For developers:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Read the Developers guide.","category":"page"}]
}
